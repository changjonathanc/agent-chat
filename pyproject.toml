[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agent-chat"
version = "0.1.0"
description = "A live chat demo showing async messaging with agents using the Agent-Environment Middleware pattern"
authors = [
    {name = "Agent Chat Team"},
]
requires-python = ">=3.12"
dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "openai",
    "python-dotenv",
    "google-api-python-client",
    "markdownify>=1.1.0",
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["agent", "chat", "ai", "openai", "async", "middleware"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Communications :: Chat",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]

[project.scripts]
agent-chat = "agent_chat.__main__:main"

[tool.hatch.build.targets.wheel]
packages = ["src/agent_chat"]
include = ["src/agent_chat/templates/**/*"]

[dependency-groups]
dev = [
    "ruff>=0.12.2",
]

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
]

# Ignore rules that don't add value for this project
ignore = [
    "E722",  # bare except - acceptable for WebSocket error handling
    "E402",  # module level import not at top - sometimes needed for config
    "E721",  # type comparison - == vs isinstance both work fine
]

[tool.ruff.lint.per-file-ignores]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]
